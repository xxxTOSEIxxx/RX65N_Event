#ifndef TIMER_H_
#define TIMER_H_
#include "r_cmt_rx_if.h"
#include "Task_def.h"
#include "Event.h"


//-------------------------------------------------
// タイマー種別
//-------------------------------------------------
typedef enum
{
	TIMER_KIND_NOT_USE = 0,										// タイマー未使用
	TIMER_KIND_ONE_SHOT,										// ワンショットタイマー
	TIMER_KIND_INTERVAL,										// インターバルタイマー

} TIMER_KIND_ENUM;


//-------------------------------------------------
// タイマー設定情報構造体
//-------------------------------------------------
typedef struct
{
	TIMER_KIND_ENUM				eTimerKind;						// タイマー種別
	TickType_t 					TimerPeriod;					// タイマー期間(ms)
	TASK_KIND_ENUM				eTaskKind;						// タイマー満了時のイベント送信先タスク
	uint32_t					Event;							// タイマー満了時の送信イベント

} TIMER_SET_INFO_TABLE;


//=================================================================================================
// タイマー初期化処理(※システム側でコールすること)
//=================================================================================================
void TimerInit(void);

//=================================================================================================
// タイマー設定
//=================================================================================================
TimerHandle_t SetTimer(TIMER_SET_INFO_TABLE* ptTimerSetInfo);

//=================================================================================================
// タイマー設定(ISR用)
//=================================================================================================
TimerHandle_t SetTimerFromISR(TIMER_SET_INFO_TABLE* ptTimerSetInfo, BaseType_t *pxHigherPriorityTaskWoken);

//=================================================================================================
// タイマー削除
//=================================================================================================
void DeleteTimer(TimerHandle_t TimerHandle);

//=================================================================================================
// タイマー削除(ISR用)
//=================================================================================================
void DeleteTimerISR(TimerHandle_t TimerHandle, BaseType_t *pxHigherPriorityTaskWoken);

#endif /* TIMER_H_ */
